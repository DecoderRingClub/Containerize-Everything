# Pro ready deployment (with TLS/Behind Nginx). Mark L.
# Everything in a box.
# 
# You'll want to create an Nginx entry to ensure this deployment can properly communicate.
#
# <whatever pkg man> install nginx
# edit the nginx.conf file and add the routes.
#
# should use the opt dir for deployment.
#
# echo KC_DB_PASS="whatever-db-pass" > .env
# echo KC_HOSTNAME_VAR="whatever-hostname" > .env
# echo KC_ADMIN_USER="whatever-username" > .env
# echo KC_ADMIN_PASS="whatever-pass" > .env
#
services:
  keycloak_web:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    ports:
    # Since this is behind Nginx on the host, we are strictly locking down the route to pass from Nginx to Keycloak
      - "8443:8443"    
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloakdb:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD_FILE: ${KC_DB_PASS}
      KC_HOSTNAME: ${KC_HOSTNAME_VAR}
      KC_HOSTNAME_STRICT: true
      KC_HOSTNAME_STRICT_HTTPS: true
      KC_HTTP_ENABLED: false
      KC_HTTPS_CERTIFICATE_FILE: /etc/ssl/certs/tls.crt
      KC_HTTPS_CERTIFICATE_KEY_FILE: /etc/ssl/private/tls.key
      KC_PROXY: edge
      KC_TRANSACTION_XA_ENABLED: false
      KC_HTTP_RELATIVE_PATH: /auth
      KC_SPI_EVENTS_LISTENER_EMAIL_EXCLUDE_EVENTS: "LOGIN, LOGOUT"
      KC_LOG_LEVEL: WARN
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KC_ADMIN_USER}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KC_ADMIN_PASS}
    volumes:
    # You'll want to bind this to your actual path on your host.
      - /etc/<whatever dir>/certs:/etc/ssl/certs:ro
    command: start --optimized # suppose to use the --optimized flag, but throws errors regardless. Works without the flag as well.
    depends_on:
      keycloakdb:
        condition: service_healthy
    restart: always
    healthcheck:
      test: ["CMD", "curl", "--silent", "--fail", "https://localhost:8443/auth/health/ready"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
      
  keycloakdb:
  # You can change the Postgres image to simply 15, but locking it to 15.2 ensures compatibility and stability. Dealers choice.
    image: postgres:15.2
    container_name: keycloakdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD_FILE: ${KC_DB_PASS}
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
      POSTGRES_INITDB_ARGS: --auth-host=scram-sha-256
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "keycloak"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
volumes:
  postgres_data:
    driver: local
